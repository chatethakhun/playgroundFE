/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SignupIndexRouteImport } from './routes/signup/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as ExampleQueryIndexRouteImport } from './routes/example/query/index'
import { Route as ExampleIconsIndexRouteImport } from './routes/example/icons/index'
import { Route as AuthenticatedChatappIndexRouteImport } from './routes/_authenticated/chatapp/index'

const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupIndexRoute = SignupIndexRouteImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExampleQueryIndexRoute = ExampleQueryIndexRouteImport.update({
  id: '/example/query/',
  path: '/example/query/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExampleIconsIndexRoute = ExampleIconsIndexRouteImport.update({
  id: '/example/icons/',
  path: '/example/icons/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedChatappIndexRoute =
  AuthenticatedChatappIndexRouteImport.update({
    id: '/chatapp/',
    path: '/chatapp/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/signup': typeof SignupIndexRoute
  '/chatapp': typeof AuthenticatedChatappIndexRoute
  '/example/icons': typeof ExampleIconsIndexRoute
  '/example/query': typeof ExampleQueryIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/signup': typeof SignupIndexRoute
  '/chatapp': typeof AuthenticatedChatappIndexRoute
  '/example/icons': typeof ExampleIconsIndexRoute
  '/example/query': typeof ExampleQueryIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login/': typeof LoginIndexRoute
  '/signup/': typeof SignupIndexRoute
  '/_authenticated/chatapp/': typeof AuthenticatedChatappIndexRoute
  '/example/icons/': typeof ExampleIconsIndexRoute
  '/example/query/': typeof ExampleQueryIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | '/chatapp'
    | '/example/icons'
    | '/example/query'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/chatapp'
    | '/example/icons'
    | '/example/query'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/login/'
    | '/signup/'
    | '/_authenticated/chatapp/'
    | '/example/icons/'
    | '/example/query/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginIndexRoute: typeof LoginIndexRoute
  SignupIndexRoute: typeof SignupIndexRoute
  ExampleIconsIndexRoute: typeof ExampleIconsIndexRoute
  ExampleQueryIndexRoute: typeof ExampleQueryIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup/': {
      id: '/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/example/query/': {
      id: '/example/query/'
      path: '/example/query'
      fullPath: '/example/query'
      preLoaderRoute: typeof ExampleQueryIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/example/icons/': {
      id: '/example/icons/'
      path: '/example/icons'
      fullPath: '/example/icons'
      preLoaderRoute: typeof ExampleIconsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/chatapp/': {
      id: '/_authenticated/chatapp/'
      path: '/chatapp'
      fullPath: '/chatapp'
      preLoaderRoute: typeof AuthenticatedChatappIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedChatappIndexRoute: typeof AuthenticatedChatappIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedChatappIndexRoute: AuthenticatedChatappIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
  SignupIndexRoute: SignupIndexRoute,
  ExampleIconsIndexRoute: ExampleIconsIndexRoute,
  ExampleQueryIndexRoute: ExampleQueryIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
