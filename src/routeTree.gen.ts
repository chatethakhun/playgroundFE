/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as ExampleQueryIndexRouteImport } from './routes/example/query/index'
import { Route as ExampleIconsIndexRouteImport } from './routes/example/icons/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExampleQueryIndexRoute = ExampleQueryIndexRouteImport.update({
  id: '/example/query/',
  path: '/example/query/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExampleIconsIndexRoute = ExampleIconsIndexRouteImport.update({
  id: '/example/icons/',
  path: '/example/icons/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/example/icons': typeof ExampleIconsIndexRoute
  '/example/query': typeof ExampleQueryIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/example/icons': typeof ExampleIconsIndexRoute
  '/example/query': typeof ExampleQueryIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login/': typeof LoginIndexRoute
  '/example/icons/': typeof ExampleIconsIndexRoute
  '/example/query/': typeof ExampleQueryIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/example/icons' | '/example/query'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/example/icons' | '/example/query'
  id: '__root__' | '/' | '/login/' | '/example/icons/' | '/example/query/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  ExampleIconsIndexRoute: typeof ExampleIconsIndexRoute
  ExampleQueryIndexRoute: typeof ExampleQueryIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/example/query/': {
      id: '/example/query/'
      path: '/example/query'
      fullPath: '/example/query'
      preLoaderRoute: typeof ExampleQueryIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/example/icons/': {
      id: '/example/icons/'
      path: '/example/icons'
      fullPath: '/example/icons'
      preLoaderRoute: typeof ExampleIconsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  ExampleIconsIndexRoute: ExampleIconsIndexRoute,
  ExampleQueryIndexRoute: ExampleQueryIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
